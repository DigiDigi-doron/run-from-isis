%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.0
%%For: (Admin) ()
%%Title: (Desert with dunes and blue sky.eps)
%%CreationDate: 2/20/2010 11:36 PM
%%BoundingBox: -289 -16 902 807
%%HiResBoundingBox: -289 -15.0469 901.5508 806.999
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 306.5 395.5 306.5 395.5
%AI3_TileBox: -114.7148 98.377 727.1455 693.3965
%AI3_DocumentPreview: Header
%AI5_ArtSize: 1190.551 822.0472
%AI5_RulerUnits: 4
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -879 1161 0.5 1326 918 26 0 0 76 89 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-305 -4
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MO
%AI7_Thumbnail: 128 88 8
%%BeginData: 22913 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF8585A9858585A9858585A9858585A9858585A985
%8585A9858585A9858585A9858585A9858585A9858585A9858585A9858585
%A9858585A9858585A9858585A9858585A9858585A9858585A9858585A985
%8585A9858585A9858585A9858585A9858585A9858585A9858585A9858585
%A9858585A9858585A9858585A9858585A98585A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFFD8185AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AFFD0485A9858585A9858585A9858585A9858585A9858585A9
%858585A9858585A9858585A9858585A9858585A9858585A9858585A98585
%85A9858585A9858585A9858585A9858585A9858585A9858585A9858585A9
%858585A9858585A9858585A9858585A9858585A9858585A9858585A98585
%85A9858585A9858585A9858585A9AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A9FD8185AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF8585A9858585A9858585A9858585A9858585A9858585A9858585A98585
%85A9858585A9858585A9858585A9858585A9858585A9858585A9858585A9
%858585A9858585A9858585A9858585A9858585A9858585A9858585A98585
%85A9858585A9858585A9858585A9858585A9858585A9858585A9858585A9
%858585A9858585A98585A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AFFD8185AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFFD0485
%A9858585A9858585A9858585A9858585A9858585A9858585A9858585A985
%8585A9858585A9858585A9858585A9858585A9858585A9858585A9858585
%A9858585A9858585A9858585A9858585A9858585A9858585A9858585A985
%8585A9858585A9858585A9858585A9858585A9858585A9858585A9858585
%A9858585A9AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A9FD8185AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585A9858585A985
%8585A9858585A9858585A9858585A9858585A9858585A9858585A9858585
%A9858585A9858585A9858585A9858585A9858585A9858585A9858585A985
%8585A9858585A9858585A9858585A9858585A9858585A9858585A9858585
%A9858585A9858585A9858585A9858585A9858585A9858585A9858585A985
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AFFD8185AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AFFD0485A9858585A9858585A9
%858585A9858585A9858585A9858585A9858585A9858585A9858585A98585
%85A9858585A9858585A9858585A9858585A9858585A9858585A9858585A9
%858585A9858585A9858585A9858585A9858585A9858585A9858585A98585
%85A9858585A9858585A9858585A9858585A9858585A9858585A9AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF8585A9858585A9858585A9858585A9858585A9858585A9858585A9
%858585A9858585A9858585A9858585A9858585A9858585A9858585A98585
%85A9858585A9858585A9858585A9858585A9858585A9858585A9858585A9
%858585A9858585A9858585A9858585A9858585A9858585A9858585A98585
%85A9858585A9858585A98585AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF8585A985A985A985A985A985A985A985A985A985A985A985A9
%85A985A985A985A985A985A985A985A985A985A985A985A985A985A985A9
%85A985A985A985A985A985A985A985A985A985A985A985A985A985A985A9
%85A985A985A985A985A985A985A985A985A985A985A985A985A985A985A9
%85A985A985A985A985A985A985A9AF85AFA9AF85AFA9AF85AFA9AF85AFA9
%AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85
%AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9
%AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85
%AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA985A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9
%AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85
%AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9
%AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85AFA9AF85
%AFA9AF85AFA9AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA985AFA9A985AF
%A9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A9
%85AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AF
%A9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A9
%85AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AF
%A9A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9A9A985AFA9A985AFA9A985AFA9A985AFA9A985AF
%A9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A9
%85AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AF
%A9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A985AFA9A9
%85AFA9A985AFA9A985AFA9A985AFA9A985AFAFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9A9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFFFA9AFA9FFA9AFA9FFA9
%AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9
%FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9
%AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9
%FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9A9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFAFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9
%AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9
%FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9
%AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9
%FFA9AFA9FFA9AFA9FFA9AFA9FFA9A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%A9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AF
%A9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FF
%A9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AF
%A9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FF
%A9AFA9FFA9AFA9FFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9A9FFA9AFA9FFA9AFA9FFA9AFA9FF
%A9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AF
%A9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FF
%A9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AF
%A9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAF
%FFAFA9FFA9FFA9FFA9FFA9FFA9AFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFFFA9FFAFFFA9FFAFFFA8CEA7FFAFFFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFAFFFAFA9FFA8CFA7CEA6CDC7C7C6C7
%9FC8A7CFA8FFA7CEA7CAA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AF
%A9FFA9AFA9FFA9AFA9FFA9AFA9FFA9FFA8CFA7A9A8FFA9AFA9FFA9AFA9FF
%A9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AFA9FFA9AF
%A9FFA9AFA9FFA9AFA9FFA8FFA8CFA8CFA7CEA6CDA5C8A7CAA8FFCDC7CDC7
%C7C7CCC7CDC7CDC8CDC7CDC7CDC7CDCDC7C0C9C9CFA8FFA8FFA8FFA8FFA9
%FFAFFFA9FFAFFFA9FFAFFFA8FFAEFFA8FFCFCFC9CEC8CDC7CCC7C7C7C8C8
%C9C9CEC7C8A7FFA8FFA8FFAFFFA9FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFA8
%FFAEFFA8FFCFFFA8CFC9CFC9CEC9CEC8CEC8CDC7CCC7CCC7CCC7CCC7CDC7
%C7C7C8FD04C7C8C7C7C7CDC7C8C7CDC7C8C7CDC7C8C7CDC7C79EC09EC09E
%C7C0C79FC7C7C8A5C8C8C8A5C8C7C8A5C8C7C7A5FD07C7C6FD08C7CCC7CD
%C7C7C0C09EC79EC19FC89FC79FC8A6C8A6C8A6C8A6C8C8C8A6CEC8C89EC7
%C7C8C7CCC7CCC7CDC7C7C7CDC7CDC7CDC8C89EC7C6FD09C7C6C7C8C7C7C7
%C8C7C7C7CDC7C8C7CDC7C8C7CDC7C8C7CDFD04C7C0C79EC7C0C09EC7C0C0
%9EC7C0C7C0C7C0C7C0C7C1C7C1FD08C7C8C7CDC7CDC7CDC7CDC7CDC7CDC7
%C8FD0FC7C8C7CDC7C8C7CDC1C09EC7C7CDC7CDC8CDC7CDC8CDC7CDC7CDC7
%CDC8CDFD04C7C1FD04C7C8C7CDC79EC7C7C7A5C8C7C79FC7C7C79FC7C7C7
%9FC7C7C79FC7C7C7A5C7C7C79FC79FC79EC79EC79EC79FC79EC7C1C79FC7
%C7C7A5C7C7C7A5C7C7C7A5C7C7C7A5C7C7C7A5C7C7C7A5C7C7C7A5C7C7C7
%A5C7C7C8A5C8C7C8A5C8C7C7A5C7C7C79EC09EC09EC09EC19EC7C7C7A5C7
%C7C7A5C8C7C7A5C7C7C7A5C8C7C7A5C8C7C7A5C8C7C7CDC8CDC8CEC8C79E
%C7C0FD3EC7C8C7C8C7C8C7C8C7C8C7C7C7C8C7C7C7C8FD04C7C0C09EC7C0
%C09EC1C0C19EC7C0C7C0C7C0C7C0C7C0C7C0C7C1C7C0FD08C7C8CDC8C8C7
%C89EC09EC09EC09EC7C0C79EC7C1C7C0C7C1C7C0C7C7C79EC7C1C7C0C7C1
%C7C0C7C7C7C0C7C7C7C0C7C1C79EC7C0C79EC7C0C79EC7C1C79EC7C7C7C1
%FD07C7C1C7C7C7C1C7C7C7C1C7C7C7C0C7C7C7C1C7C7C7C1C79EC09EC19E
%C09EC19EC09EC7C0C79EC7C0C79EC7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C8
%C7C8C7C8C7C8C1C19EC1C0C09EC1C0C09EC7C0C79EC7C0C7C0C7C1C7C0C7
%C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C7C7C1FD1BC7C0C7C7C7
%C8C7C0C7C6C7C7C7C6C7C7C7C6C7C7C7C6C7C7C7C6C7C7C7C0C7C7C7C0C7
%C6C7C0C7C6C7C0C7C6C7C0C7C6C7C79FC7C7C7A5C7C7C79EC79EC09EC09E
%C09EC09EC09EC09EC79EC79EC09EC09EC09EC19EC09EC79EC79EC7C0C79E
%C7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0
%C79EC7C0C7A5CDC8CE9EC09EC69EC7C0C79EC7C0C79EC7C0C79EC7C0C79E
%C7C0C69EC7C0C69EC7C0C69EC7C0C69EC7C0C7A5CDFD16C7CDC7C8C1C7C0
%C09EFD13C7C6C7C7C7C6C7C7C7C6C7C7C7C6C7C7C7C6C7C6C7C6C7C6C7C0
%C7C6C7C0C7C7CDC8CEC8CEC8CEC7C09EC7C0C7C6C7C6C7C0C7C6C7C0C7C6
%C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C7CDC7CDC8CDC8C1C7C0C7C0C7
%C0C7C0C7C0FD07C7A5C8C7C7A5C79EC09EC09EC09EC1C0C7C0C7C0C7C0C7
%C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C7
%9EC7C0C69EC7C7C8C8CEC8C8C8CDC8C8C8CEC7C79EC09EC09EC7C0C69EC7
%C0C69EC7C0C69EC7C0C69EC7C0C69EC7C7C7A5C8C7C8C7C8C7C7C7C8C7C7
%C7C0FD12C7C09EC19EC09EC19EC09EC1C0C7C0C7C6C7C0C7C6C7C0C7C6C7
%C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C0C6C0C7C7C8C8CE
%C8CDC8CDC8CDC8CDC8CDC8CEC8C89FC79EC09EC7C0C7C0C7C0C7C0C7C0C7
%C0FD08C7CDC7C7C7C8C7C7C7C8C7C7C79EC79FC79EC7A5C79EC7A5C79EC7
%A5C79EC7A5C79EC1989E989E9E9E989E9E9E989E989E9EC69EC69EC7C0C6
%9EC7C0C69EC7C0C69EC6C0C69EC6C0C69EC6C0C69EC6C0C69EC7C1C8A5C8
%C8C8A5C8C8C8A5C8C8C8A5C8C7C8A5C8C8C8A5C79EC098C09EC09EC7C0C7
%9EC7A5C79FC7A5C79FC7A5C79FC7A5C79FC7A5C79FC7A5FD18C79EC19EC0
%9EC19EC19EC19EC19EC19EC19EC7C0C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7
%C6C7C0C7C6C7C0C7C6C7C7CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CDC8CD
%C8CDC8C8C8CDC8CDC1C19EC09EC19EC7C1FD18C79EC79EC79EC79EC79EC7
%9EC79EC79EC79EC79EC79EC7C0C79EC19E9E989E989E989E989E989E989E
%989E989E98FD049EC09EC09EC79EC69EC7C0C69EC6C0C79FC8C7C8A5C8C7
%C8A5C8C7C8A5C8C7C8A5C8C7C8A5C8C7C8A5C8C7C8A5C8C7C89EC09E9E9E
%C09E9E9EC19EC79EC7C0C79EC79EC79EC79EC79EC79EC79EC79EC7C79EC7
%C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C7C0C7C6C79EC79EC7
%9EC79EC19EC19E9F9EC19E9E9E9F9E9E9E9F9E9E9EC19E9E9EC19EC79FC8
%C8C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C79EC09EC19EC09EC19EC09EC19EC09EC79EC79EC7C6C7C0C7C6C7C0C7
%C6C7C0C7C69EC69EC69EC09EC69EC79EC79EC69EC69EC69EC69EC69EC69E
%C69EC69EC69EC69EC69EC79EC69EC79EC69EC69EC69EC79EC69EC69EC09E
%C79EC79FC8A5C8A5C8A5C7A5C8A5C79FC8A5C79FC8A5C79FC7A5C79FC7A5
%C79FC7A5C79FC79E9E989E989E989E989E989E989E989E989E989E989E98
%C09E9E9EC09EC09EC0FD049EC7C0C7C0C6C0C7C7C8C7CD9EC09EC7C0C7C0
%C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0
%C7C0C7C0FD04C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8C7C8
%C7C8C7C8C7C8C7C8C7C79EC19EC09EC19EC19EC19EC19EC19EC19EC19EC1
%9EC19EC19EC19E9E9EC19E9E9EC19E9E989F9E9EC09EC7A5C7A5C8C7C89E
%C09E9E9EC09EC09EC69EC09EC69EC09EC69EC09EC69EC09EC69EC09EC69E
%C09EC69EC09EC69EC79EC7C7C7A5C7C7C79FC7C7C79FC7C7C79FC7A5C79F
%C7C7C79FC7C7C79FC7A5C79FC7A5C79E9E989E989E989E989E989E989E98
%9E989E989E989E989E989E989E989E989E989E989E98FD049EC7C8C7C8C7
%C8C7C8C7C8C7C09EC19EC09EC19EC09EC7C0C69EC7C0C69EC7C0C69EC7C0
%C69EC7C0C69EC6C0C69EC7C0C7C7C8FD24C79F9E989F9E9E989F9E9E989F
%9E9E989F9E9E989F9E9E989F9E9E989F9E9E989F9E9E9EC19EC79EC7C7C7
%C19FC7A5C79FC7A5C79FC1989E989E989E989E989E98FD049EC09EC09EC0
%9EC09EC09EC09EC09EC09EC79EC79FC79FC79FC79FC79EC79FC79EC79FC7
%9EC79FC79EC79FC79EC79FC79EC79FC79EC79EC79EC79EC79EC79E9E989E
%989E749E989E749E989E749E989E749E989E989E989E989F9E9F9EC79EC7
%9EC79EC79EC79EC7C8C7C7C7C8C7C7C7C89E9E9EC19EC19EC19EC19EC19E
%9F9EC19E9F9EC19E9E9EC19EC09EC79FC7C7C8FD1EC7C1C7C7C7C1C7C7C7
%C1C7C7C7C1C7C7C7C1C79EC79EC79EC19EC19EC19EC79EC19EC79EC79EC7
%C1C7C0C7C7C7C0C7C7C7C0C7C0C7C0C7C0C7C09FC79FC79FC79FC79FC798
%9E989E989E989E989E989E989E989E989E98FD049EC79FC7C7CDC8C89EC0
%9EC79EC79EC79EC79EC79EC79EC79EC79EC79EC79EC79EC79EC79EC79EC7
%9EC79EC79EC79EC79EC79EC79EC79EC79EC79EC79EC79EC79EC79EC79EC7
%9EC79EC79EC79EC79EC79EC79EC79EC79EC79EC79EC69EC79EC6C7C1C7C7
%C79FFD05C79E9F9E9F9E9E989F9E9E9EC19EC19EC79EC7C1C8C7C8C8CEC8
%CDC8CEC0C0C0C7C0C79EC7C7C79EC7C1C79EC7C1C79EC7C0C79EC7C0C79E
%C7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0
%C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79EC7C0C79E
%C7C09EC79EC79EC79EC79EC79EC79EC79EC79EC19EC79EC79EC79FC79FC8
%C7C8A5C8C8C8A5C8C7C8A5C79EC09EC09EC09EC79EC79EC79EC79EC79EC7
%9EC79EC69EC79EC69EC79EC69EC79EC69EC79EC69EC79EC69EC79EC09EC7
%9EC09EC69EC09EC69EC09EC69EC09EC69EC09EC69EC09EC69EC09EC69EC0
%9EC69EC09EC69EC09EC7C7C0C7C7C7C0C7C0C7C0C7C0C7C0FD08C7C8C7C8
%C8CDC8C8C7CDC8C8C7CDC7C8C7CDC7C7C0C7C0C1C0C7C0C7C0C7C0C7C0C7
%C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7
%C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C79EC7
%C0C7C0C7C0C69EC7C0C7C7C8C79EC79EC79EC79EC7C1C79FC7C7C7A5FD04
%C7C8C7C8C7C8C7C7C7C8C7C7C7C8C7C7C7C8C7C7C7C8C7C79EC09EC09EC0
%9EC09EC09EC09EC69EC09EC79EC69EC69EC09EC69EC09EC69EC09EC69EC0
%9EC69EC09EC69EC09EC69EC09EC69EC09EC69EC09EC69EC09EC69EC09EC6
%9EC09EC69EC09EC09EC09EC19EC79EC7C7C7C1C7C8C7C8C7C8C7C8C7C8C7
%C8C7C8C7C8C7C8C7C7C7C8C7C7C7C8C7C7C7C8FD0EC7C1C79EC09EC19EC0
%9EC19EC09EC19EC09EC7C0C69EC7C0C69EC7C0C69EC7C0C69EC7C0C69EC7
%C0C69EC7C0C69EC7C0C69EC7C0C69EC7C0C69EC7C0C69EC7C0C69EC69EC0
%9EC19EC19EC7C1FD0AC79FC7C7C79FC7C7C79FC7C7C79FC7C7C79FC7C1C7
%9FC7C1C79EC7C1C79EC7C1C79EC7C1C79EC7C1C79EC7C1C79EC79E9E98C0
%9E9E98C09E9E98C09E9E989E9E9E98C09E9E9EC09EC09EC09EC09EC09EC0
%9EC09EC09EC09EC09EC09EC09EC09EC09EC09EC09EC09E9E989E989E9EC0
%9EC19EC7C0C79EC7C0C79EC7C0C79EC7C0FD30C79EC19EC19EC19EC19EC1
%9EC19EC19EC19EC19EC19EC19EC19EC19EC19EC19EC19EC19EC19EC19EC1
%9EC19EC19EC19E9E9EC19E9E98C19EC19EC7C0C7C0C7C7C7C6C7C7C7C6C7
%C7C7C6C7C6C7C6C7C6C7C6C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0
%C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C7C0C79E9E989E98
%9E989E989E989E989E989E989E989E989E989E989E989E989E989E989E98
%9E989E989E989E989E989E989E98FD049EC19EC09EC7C0C7C0C7C0C7C0C7
%C0C7C0C7C0C79EC7C0C79EC7C0C69EC7C0C6C7C0C7C6C7C0C7C6C7C0C7C6
%C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0
%C79E9E989F9E9E989F9E9E989F9E9E989F9E9E989F9E9E989F9E9E989F98
%9E989F989E989F989E989F9E9E9EC19EC19EC7C0C7C0C7C6C7C0C7C6C7C0
%C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C0C69EC7
%C0C69EC7C0C69EC7C0C69EC7C0C69EC7C0C69EC7C0C69EC7C0C69EC7C0C6
%9EC7C0C69EC7C0C69EC0989E749E7498749E7498749E7498749E7498749E
%749E749E749E749E989E98FD049EC09EC09EC69EC69EC6C0C69EC6C0C69E
%C6C0C69EC6C0C69EC6C0C69EC6C0C69EC6C0C69EC6C0C69EC6C0C69EC6C0
%C69EC6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7
%C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C79EC19EC19EC19EC19EC1
%9EC19EC19EC79EC19EC7C0C7C0C7C0C7C0C7C6C7C6C7C6C7C0C7C6C7C0C7
%C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C6C7C0C7C0C7C0C7C0C7C0C7C0C7
%C0C7C0C7C0C7C0C7C0C7C0C0C09EC6C0C09EC6C0C09EC6C0C09EC6C0C09E
%C6C0C09EC6C0C09EC6C0C09EC6C0C09EC6C0C09EC6C0C09EC6C0C6C0C6C0
%C6C0C6C0C6C0C6C0C6C0C6C0C6C0C6C0C6C0C6C0C0C0C6C0C09EC6C0C09E
%C6C0C09EC6C0C09EC6C0C09EC6C0C09EC6C0C09EC6C0C09EC6C0C09EC6C0
%C09EC6C0C09EC6C0C09EC6C0C09EC6C0C09EC6CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE
%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8C9
%C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C8CE
%C8C9C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C8FD7FFF
%FF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(UnitCell class) (Artlandia SymmetryWorks Plug-in) (Artlandia SymmetryWorks.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
13 Bn
%AI5_BeginGradient: (Unnamed gradient 3300)
(Unnamed gradient 3300) 0 2 Bd
[
<
04050708090A0C0D0E0F10
>
<
646566676869696A6B6C6D
>
1
0
<
F6F5F4F3F2F1EFEEEDECEB
>
<
A6A5A4A3A2A1A09F9E9D9C
>
<
100F0F0E0D0D0C0B0A0A09
>
4 %_Br
[
0.062745 0.427451 1 0 0.921569 0.611765 0.035294 2 52.5714 100 %_BS
%_0.062745 0.427451 1 0 0.921569 0.611765 0.035294 2 52.5714 100 Bs
0.015686 0.392157 1 0 0.964706 0.65098 0.062745 2 50 0 %_BS
%_0.015686 0.392157 1 0 0.964706 0.65098 0.062745 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3301)
(Unnamed gradient 3301) 0 3 Bd
[
<
1A1B1C1D1E1F202122232425262728292A2C2D2D2F2F303132333434353637373839
>
<
737474757676777877787978797A7A7B7C7B7C7D7D7E7F7E7F807F81818182838283
>
1
<
000101010101010202020202030303040404050505060607070808090A0A0B0C0C0D
>
<
E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1
>
<
969595949393929191908F8F8E8D8D8C8B8B8A898988878786858584838382818180
>
<
08080808080808080808080808080808080707070707070707070707070707070707
>
4 %_Br
<
04050608090A0A0C0D0E0F101112131414161718181A
>
<
66676968696A6B6B6C6D6C6D6E6E6F70707172727373
>
1
0
<
F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E7E6E5E4E4E3
>
<
A4A3A2A2A1A09F9F9E9D9D9C9B9B9A99999897979696
>
<
0B0B0B0B0A0A0A0A0A0A090909090909090808080808
>
4 %_Br
[
0.223529 0.513725 1 0.05098 0.756863 0.501961 0.027451 2 75.7576 100 %_BS
%_0.223529 0.513725 1 0.05098 0.756863 0.501961 0.027451 2 75.7576 100 Bs
0.101961 0.45098 1 0 0.890196 0.588235 0.031373 2 50 67.5824 %_BS
%_0.101961 0.45098 1 0 0.890196 0.588235 0.031373 2 50 67.5824 Bs
0.015686 0.4 1 0 0.964706 0.643137 0.043137 2 45 1.68539 %_BS
%_0.015686 0.4 1 0 0.964706 0.643137 0.043137 2 45 1.68539 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3302)
(Unnamed gradient 3302) 0 3 Bd
[
<
04050607080A0A0B0D0E0F10111213141617181A1C1D1E1F202122232425262728292A2B2B2D2D
>
<
6869696A6B6A6B6C6C6D6E6F6E6F7070717272737473757675767777787879797A7B7A7C7D7C7D
>
1
<
000000000000000000000000000000000000000001010101010202020202030303040404040505
>
<
F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CF
>
<
A3A2A2A1A0A09F9E9E9D9C9B9B9A9999989797969595949393929191908F8E8E8D8C8C8B8A8A89
>
<
0A0A0A0A0A0A0A0909090909090909090909090908080808080808080808080807070707070707
>
4 %_Br
0.015686
0.4
1
0
0.964706
<
A4
>
<
0B
>
4 %_Br
[
0.176471 0.490196 1 0.019608 0.811765 0.537255 0.027451 2 75.7576 100 %_BS
%_0.176471 0.490196 1 0.019608 0.811765 0.537255 0.027451 2 75.7576 100 Bs
0.015686 0.407843 1 0 0.964706 0.639216 0.039216 2 50 58.2418 %_BS
%_0.015686 0.407843 1 0 0.964706 0.639216 0.039216 2 50 58.2418 Bs
0.015686 0.4 1 0 0.964706 0.643137 0.043137 2 45 1.68539 %_BS
%_0.015686 0.4 1 0 0.964706 0.643137 0.043137 2 45 1.68539 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3303)
(Unnamed gradient 3303) 0 2 Bd
[
0.015686
<
51515151515151515151515151515151515151515151515151515151505050505050505050505050
505050505050504F4F4F4F4F4F4F4F4F4F4F4F4F4D4D4D4D4D4D4D4D4D4D4C4C4C4C4C4C4C4C4C4A
4A4A4A4A4A4A4A494949494949494848484848484846464646464645454545454544444444444442
4242424241414141413F3F3F3F3F3E3E3E3E3E3C3C3C3C3B3B3B3B39393939393838383837373737
3636363634343433333333313131313030302E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A2929292828
282627272525252424242222222121212020201E1E1D1D1D1C1C1C1A1B1A1A1A1818181717151516
14141313
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFEFEFDFDFDFCFCFCFCFCFCFBFBFBFBFBFAFAF9F9F9F8F8F7F7F7F7F6F6F6
F5F5F4F4F3F3F2F2F2F1F0F0F0F0EFEFEEEDEDECECECECEBEBEAE9E9E8E8E7E7E6E5E5E4E3E3E2E2
E1E0E0DFDFDFDEDDDDDCDBDBDAD9D9D8D7D6D6D5D4D4D3D2D1D2D1D0CFCFCECDCCCCCBCAC9C8C8C7
C6C5C4C4C3C2C1C1C0BFBFBEBDBCBBBAB9B9B7B6B5B4B3B2B1B0AFAEAEADACABAAA9A8A7A5A4A3A2
A19F9E9D
>
0
<
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFD
>
<
B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B5B5B5B5B5B5B5B5B5B5B5B5
B5B5B5B5B5B5B5B6B6B6B6B6B6B6B6B6B6B6B6B6B7B7B7B7B7B7B7B7B7B7B8B8B8B8B8B8B8B8B8B9
B9B9B9B9B9B9B9BABABABABABABABBBBBBBBBBBBBBBCBCBCBCBCBCBDBDBDBDBDBDBEBEBEBEBEBEBF
BFBFBFBFC0C0C0C0C0C1C1C1C1C1C2C2C2C2C2C3C3C3C3C4C4C4C4C5C5C5C5C5C6C6C6C6C7C7C7C7
C8C8C8C8C9C9C9CACACACACBCBCBCBCCCCCCCDCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3
D3D4D4D4D5D5D5D6D6D6D7D7D7D8D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDEDFDFDFE0E0E1E1E1
E2E2E3E3
>
<
0808080808080808080808080808080808080909090909090909090909090A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0C0C0C0C0C0C0D0D0D0D0D0E0E0E0E0E0F0F0F0F101010101111111112121212131313
1414141515151516161617171818181919191A1A1A1B1B1C1C1C1D1D1E1E1E1F1F20202121222222
23232424252526262727282829292A2A2B2C2C2D2D2E2E2F2F303131323233333435353637373838
393A3A3B3C3C3D3E3E3F40404142424344454546474748494A4A4B4C4D4D4E4F5050515253545455
56575858595A5B5C5D5E5E5F60616263646465666768696A6B6C6D6E6E6F70717273747576777879
7A7B7C7D
>
4 %_Br
[
0.015686 0.07451 0.615686 0 0.992157 0.890196 0.490196 2 52.5714 100 %_BS
%_0.015686 0.07451 0.615686 0 0.992157 0.890196 0.490196 2 52.5714 100 Bs
0.015686 0.317647 1 0 0.976471 0.705882 0.031373 2 71.6667 0 %_BS
%_0.015686 0.317647 1 0 0.976471 0.705882 0.031373 2 71.6667 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3305)
(Unnamed gradient 3305) 0 2 Bd
[
<
1111111111111111111111111010101010101010101011111111110F0F1010101010101010101010
0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C
0C0C0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A090909090909090A0A09090909090909090908
08080808080808080707080808080808070707070707070706060606060606070706060606060606
0606060606
>
<
59595959575757575757565656565555555553535353525252525051514F4F4F4E4E4E4D4D4D4D4B
4C4C4A4A4A494949474746464645454544444442424241414040403F3F3D3D3D3C3C3C3B3B3A3A3A
38383737373636343432323231313030302E2E2D2D2C2C2C2B2B2A2A292928282827272525242423
2323212120201F1F1E1E1C1C1B1B1B1A1A1919171716161515141413131212101110100E0F0D0D0C
0C0B0B0A0A
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFEFEFDFCFBFBFAFAF9F9F8F7F7F6F4F4F3F2F1F0EFEFEEEDECECEBEAE9E8E8E7
E6E5E4E3E3E2E1DFDEDDDDDCDBD9D8D7D7D6D6D5D4D2D1D1D1D0CFCECDCBCAC9C9C8C7C7C6C5C4C3
C2C1C1C1C0BFBEBDBCBBBAB8B8B6B5B4B3B2B1B1B0AFAEADACABAAA9A8A7A6A5A3A2A1A09E9E9C9C
9A99989796
>
0
<
EDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEF
F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3
F3F3F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F8
F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFC
FCFDFDFDFD
>
<
ABABABABACACACACACACADADADADAEAEAEAEAFAFAFAFB0B0B0B0B1B1B1B2B2B2B3B3B3B4B4B4B4B5
B5B5B6B6B6B7B7B7B8B8B9B9B9BABABABBBBBBBCBCBCBDBDBEBEBEBFBFC0C0C0C1C1C1C2C2C3C3C3
C4C4C5C5C5C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCDCDCDCECECFCFD0D0D1D1D1D2D2D3D3D4D4D5
D5D5D6D6D7D7D8D8D9D9DADADBDBDBDCDCDDDDDEDEDFDFE0E0E1E1E2E2E3E3E4E4E5E5E6E6E7E7E8
E8E9E9EAEA
>
<
06060607070708080909090A0A0B0B0C0C0D0D0E0E0F0F101111121213131415151617171818191A
1A1B1C1C1D1E1E1F20212122232324252626272828292A2B2B2C2D2E2F2F30313232333435363637
38393A3B3B3C3D3E3F4040414243444545464748494A4B4B4C4D4E4F50515253535455565758595A
5B5C5D5D5E5F606162636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7D7E7F80
8182838485
>
4 %_Br
[
0.023529 0.039216 0.588235 0 0.992157 0.917647 0.521569 2 52.5714 100 %_BS
%_0.023529 0.039216 0.588235 0 0.992157 0.917647 0.521569 2 52.5714 100 Bs
0.066667 0.34902 1 0 0.929412 0.670588 0.023529 2 58.5859 46.1538 %_BS
%_0.066667 0.34902 1 0 0.929412 0.670588 0.023529 2 58.5859 46.1538 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3306)
(Unnamed gradient 3306) 0 2 Bd
[
<
111111111111111111111010101010101010101011110F0F0F1010101010100F0F0F0F0F0F0F0F0F
0E0E0E0E0E0E0E0D0D0D0D0D0D0E0C0C0C0C0C0C0D0B0B0B0C0C0C0A0A0A0A0A0A09090909090908
0809090909080808080809080708080807070707080807070707070607070707060606
>
<
595959595957575757555656565555555553535352525251514F4F4F4E4E4E4D4D4C4C4A4A4A4949
484846464545454444424241413F403E3F3D3D3C3A3B393938383737353534323231312F2E2E2D2D
2C2B2B2A2A2927272626242324222021201E1E1D1B1B1A191917161715141412121210
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFEFEFDFDFCFBFBF9F8F8F7F7F6F5F4F3F2F1F1F0EFEEEDECEBEBE9E8E7E7E7E6E4
E3E2E2E1E0E0DFDEDEDDDCDBDAD9D8D7D7D6D5D5D4D3D2D1D0D0CFCECDCCCBCAC9C8C7
>
0
<
EDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F3F3F3F3F3F3F3F4F4F4F4F4F4F5F5F5F5F5F5F6F6F6F6F6F6F7
F7F7F7F7F7F8F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFAFBFBFBFBFBFCFCFCFCFCFDFDFD
>
<
ABABABABABACACACACADADADADAEAEAEAEAFAFAFB0B0B0B1B1B2B2B2B3B3B3B4B4B5B5B6B6B6B7B7
B8B8B9B9BABABABBBBBCBCBDBDBEBEBFBFC0C0C1C2C2C3C3C4C4C5C5C6C6C7C8C8C9C9CACBCBCCCC
CDCECECFCFD0D1D1D2D2D3D4D4D5D6D6D7D8D8D9DADADBDCDCDDDEDEDFE0E0E1E2E2E3
>
<
060606060707070808080909090A0A0B0B0B0C0C0D0D0E0E0F0F1011111212131314151516161718
18191A1A1B1C1C1D1E1E1F202121222324242526272728292A2B2B2C2D2E2F2F3031323334343536
3738393A3B3B3C3D3E3F40414243444545464748494A4B4C4D4E4F5051525354555657
>
4 %_Br
[
0.023529 0.062745 0.780392 0 0.992157 0.890196 0.341176 2 52.5714 100 %_BS
%_0.023529 0.062745 0.780392 0 0.992157 0.890196 0.341176 2 52.5714 100 Bs
0.066667 0.34902 1 0 0.929412 0.670588 0.023529 2 61.3139 25.2747 %_BS
%_0.066667 0.34902 1 0 0.929412 0.670588 0.023529 2 61.3139 25.2747 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3308)
(Unnamed gradient 3308) 0 2 Bd
[
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050505050606060606060505050505050505050505050505050505050505050505050505050505
05050505050505050505050505050505050504040404040404040404040404030303030404040404
04040404040404040404040404040404040404040404040404040505050404040404040404040404
04040404040404040404040405050505050505050404040404040404040404040404
>
<
4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4A4A4A4A4A4A4A4A4A4A4A4A4A4A4949494949494949494947474747
47474747474646464646464646454545454545454444444444444442424242424241414141413F3F
3F3F3F3F3E3E3E3E3E3C3C3C3C3C3B3B3B3B39393939393838383836363636353535363434343433
333333313131303030302E2E2E2D2D2D2D2C2C2C2A2B2B2929292828282828282826262625252424
242222222121211F20201E1E1D1D1D1B1B1A1A1A1919191818161617151514141313
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFD
FDFDFDFDFCFCFCFCFBFBFBFBFBFAF9F9F9F8F8F8F7F7F7F7F7F7F6F6F6F5F5F4F4F4F3F3F2F2F1F1
F1F0F0F0EFEFEFEEEEEDEDECECECEBEBEBEAEAE9E9E8E8E7E7E6E6E5E4E4E3E3E2E2E1E0E0DFDFDE
DEDEDDDCDCDBDADAD9D8D8D7D6D6D5D4D4D3D2D2D2D1D0D0CFCECDCDCCCBCAC9C9C8C7C6C5C5C4C3
C2C2C2C1C0BFBEBDBCBCBBBAB9B8B7B6B5B4B3B3B1B0AFAEADACABABAAA9A8A6A5A4
>
0
<
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFD
>
<
B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B8B8B8B8B8B8B8B8
B8B8B8B8B8B8B8B8B8B8B8B8B9B9B9B9B9B9B9B9B9B9B9B9B9B9BABABABABABABABABABABBBBBBBB
BBBBBBBBBBBCBCBCBCBCBCBCBCBDBDBDBDBDBDBDBEBEBEBEBEBEBEBFBFBFBFBFBFC0C0C0C0C0C1C1
C1C1C1C1C2C2C2C2C2C3C3C3C3C3C4C4C4C4C5C5C5C5C5C6C6C6C6C7C7C7C7C8C8C8C8C9C9C9C9CA
CACACACBCBCBCCCCCCCCCDCDCDCECECECECFCFCFD0D0D0D1D1D1D2D2D2D2D3D3D3D4D4D4D5D5D6D6
D6D7D7D7D8D8D8D9D9D9DADADBDBDBDCDCDDDDDDDEDEDEDFDFE0E0E0E1E1E2E2E3E3
>
<
10101010101010101010101010101010101010101010111111111111111111111111111112121212
12121212121313131313131314141414141415151515151616161616171717171718181818191919
191A1A1A1B1B1B1B1C1C1C1D1D1D1E1E1E1F1F1F2020202121212222222323242424252526262727
27282829292A2A2B2B2C2C2D2D2E2E2F2F3030313132323333343435363637373838393A3A3B3B3C
3D3D3E3F3F40414142434344454546474748494A4A4B4C4C4D4E4F4F505152535354555657575859
5A5B5B5C5D5E5F60616162636465666768696A6A6B6C6D6E6F707172737475767778
>
4 %_Br
[
0.015686 0.07451 0.643137 0 0.992157 0.890196 0.470588 2 52.5714 100 %_BS
%_0.015686 0.07451 0.643137 0 0.992157 0.890196 0.470588 2 52.5714 100 Bs
0.019608 0.301961 1 0 0.976471 0.717647 0.062745 2 73.4513 53.2967 %_BS
%_0.019608 0.301961 1 0 0.976471 0.717647 0.062745 2 73.4513 53.2967 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3310)
(Unnamed gradient 3310) 0 2 Bd
[
<
07070707060606060707070707070706060606060605050506060605060505050505050505050504
04040505050505050505050505050404040404040405050505050506060606060606060606060606
0606060606060606060606
>
<
080A0B0B0C0E0F0F101111121415151718181A1B1B1C1E1E1F2020222223252526262829292A2A2B
2B2C2D2D2F2F3030323233333535363636383839393B3B3B3C3C3C3D3D3D3F3F3F40404042424242
4343434343454545454545
>
<
C2C3C3C4C5C6C7C7C8C9CACBCCCDCDCECECFD0D1D1D2D3D3D4D5D6D7D8D8D8D9DADBDBDCDCDDDDDE
DFDFE0E0E1E1E3E3E4E4E6E6E7E7E7E8E8E9E9EAEBEBECECEDEDEEEEEFEFEFF0F0F1F1F1F3F3F3F3
F4F4F5F5F5F5F6F6F6F6F6
>
0
<
FDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
FBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9
>
<
E9E8E7E7E6E5E4E4E3E2E2E1E0DFDFDEDDDDDCDBDBDAD9D9D8D7D7D6D6D5D4D4D3D3D2D1D1D0D0CF
CFCECDCDCCCCCBCBCACAC9C9C8C8C7C7C7C6C6C5C5C4C4C4C3C3C3C2C2C2C1C1C1C0C0C0BFBFBFBF
BEBEBEBEBEBDBDBDBDBDBD
>
<
5E5D5C5B5A59585756555453525151504F4E4D4C4B4A494948474645444443424140403F3E3D3D3C
3B3A3A393838373636353434333232313130302F2E2E2D2D2C2C2B2B2A2A2A292928282827272626
2626252525252424242424
>
4 %_Br
[
0.023529 0.270588 0.964706 0 0.976471 0.741176 0.141176 2 75.7576 89.3258 %_BS
%_0.023529 0.270588 0.964706 0 0.976471 0.741176 0.141176 2 75.7576 89.3258 Bs
0.027451 0.031373 0.760784 0 0.992157 0.913725 0.368627 2 35.8025 0 %_BS
%_0.027451 0.031373 0.760784 0 0.992157 0.913725 0.368627 2 35.8025 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3312)
(Unnamed gradient 3312) 0 2 Bd
[
<
08070707070707070707070707060606050505050605050505050505050404040404040404050404
04040404040404040404050505
>
<
090A0B0D0E10121214161719191A1C1D1F2022222324262727292A2B2B2C2E2E2F31313234333535
373738383A3A3A3B3B3B3D3D3D
>
<
DDDDDDDDDDDEDDDDDDDDDDDDDDDDDDDEDEDEDFDFDFDFDFDFDFDFDFDFDFDFDFDFE0E0E0E0E0E0E1E1
E2E2E2E2E2E2E2E2E2E2E2E2E2
>
0
<
FDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFA
>
<
E7E6E5E4E3E2E1E0DFDEDDDCDCDBDAD9D8D7D6D6D5D4D3D2D2D1D0CFCFCECDCDCCCBCBCAC9C9C8C8
C7C7C6C6C5C5C5C4C4C4C3C3C3
>
<
3D3D3D3D3D3C3C3C3C3C3C3C3C3C3C3B3B3B3B3B3B3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A
39393939393939393939393939
>
4 %_Br
[
0.019608 0.239216 0.886274 0 0.980392 0.764706 0.223529 2 75.7576 100 %_BS
%_0.019608 0.239216 0.886274 0 0.980392 0.764706 0.223529 2 75.7576 100 Bs
0.031373 0.035294 0.866667 0 0.992157 0.905882 0.239216 2 37.9121 0 %_BS
%_0.031373 0.035294 0.866667 0 0.992157 0.905882 0.239216 2 37.9121 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3489)
(Unnamed gradient 3489) 0 2 Bd
[
<
4F4F4E4D4D4C4B4B4A494948474746454544444342414040403F3E3D3D3C3B3A3A39383737363535
3434333231302F2E2E2E2D2C2B2A2928282726252423232221201F1F1E1D1C1B1B1A181717161415
13121111100F0F0E0E0D0B0C0A0A0A0A
>
<
8F8F8F8E8D8E8D8C8D8C8B8C8B8A8B8A8A8988898887888786868586858484838283828382818180
817F7F7F7E7F7E7D7D7C7C7B7C7A797A7879787878787776767576747573747373717270706F706F
6F6E6E6D6D6E6C6D6B6C6C6B6B6B6A6A
>
1
<
27262524232221201F1E1D1D1C1B1A1A191817171615141413131211100F0F0E0D0D0C0C0B0A0A09
09080807070606050505050404040303030302020202020202010101010101000000000000000000
00000000000000000000000000000000
>
<
A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C6
C7C8C9CACBCCCDCECECFD0D1D2D3D4D5D5D6D7D8D9DADADBDCDDDEDEDFE0E1E2E2E3E4E5E5E6E7E7
E8E9EAEAEBECECEDEDEEEFEFF0F0F1F1
>
<
6B6C6C6D6E6E6F707071727273747475757677777879797A7B7B7C7C7D7E7E7F8080818182838384
8485868687878889898A8A8B8B8C8D8D8E8E8F8F909091929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0
>
<
06060606060606060606060606060707070707070707070707070707070707070707070707070707
07070808080808080808080808080808080808080808080808080808080808080808090909090909
09090909090909090909090909090909
>
4 %_Br
[
0.039216 0.415686 1 0 0.945098 0.627451 0.035294 2 52.5714 100 %_BS
%_0.039216 0.415686 1 0 0.945098 0.627451 0.035294 2 52.5714 100 Bs
0.309804 0.560784 1 0.152941 0.631373 0.419608 0.023529 2 44.0594 3.94737 %_BS
%_0.309804 0.560784 1 0.152941 0.631373 0.419608 0.023529 2 44.0594 3.94737 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3490)
(Unnamed gradient 3490) 0 2 Bd
[
<
4F4F4E4D4D4C4B4B4A4949484747464545444443424140403F3E3D3C3D3C3B3A3A39383737363534
3433323131302F2E2D2D2C2B2A2928282726252423222121201F1E1D1C1C1B1A1817161614131211
11100F0E0E0D0B0C0A0A0A080707
>
<
8F8F8F8E8D8E8D8C8D8C8B8C8B8A8B8A8A8988898887888786878686858484838283828382818181
7F807F807E7D7E7D7D7C7B7C7A7B7A78797878787877767675767575747473717270716F706F6F6E
6E6D6E6D6D6C6C6B6B6A6A6B6A6A
>
1
<
27262524232221201F1E1D1D1C1B1A1A191817171615141413121111100F0F0E0D0D0C0C0B0A0A09
08080707070606050505040404040303030202020202020201010101010100000000000000000000
0000000000000000000000000000
>
<
A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCBCCCDCECFD0D1D2D3D4D5D5D6D7D8D9DADBDCDCDDDEDFE0E1E1E2E3E4E5E6E6E7E8E9EA
EAEBECEDEDEEEFEFF0F1F1F2F3F3
>
<
6B6C6C6D6E6E6F707071727273747475757677777879797A7B7B7C7C7D7E7E7F8080818182838384
8585868687888889898A8B8B8C8C8D8E8E8F8F9090919292939394949595969797989899999A9A9B
9B9C9C9D9D9E9E9F9FA0A0A0A1A1
>
<
06060606060606060606060606060707070707070707070707070707070707070707070707070707
07070708080808080808080808080808080808080808080808080808080808080808090909090909
0909090909090909090909090909
>
4 %_Br
[
0.027451 0.415686 1 0 0.952941 0.631373 0.035294 2 52.5714 100 %_BS
%_0.027451 0.415686 1 0 0.952941 0.631373 0.035294 2 52.5714 100 Bs
0.309804 0.560784 1 0.152941 0.631373 0.419608 0.023529 2 45.5696 30.7692 %_BS
%_0.309804 0.560784 1 0.152941 0.631373 0.419608 0.023529 2 45.5696 30.7692 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3493)
(Unnamed gradient 3493) 0 2 Bd
[
<
484746464545444443424140403F3E3D3D3C3B3A3A3A393838373635343433323231302F2F2D2D2C
2C2B2A2928272626252423222221201F1E1E1D1C1B1B1A1817171614151312121110100F0E0E0D0C
0C0A0B0A0A090908080606070505
>
<
8C8B8C8B8A8A89888988878887868786858584858382838281828181817F807F7F7E7D7E7D7D7C7B
7B7A7A797A7978787778777776767576757573747373717270706F706F6F6E6E6D6D6C6C6D6B6C6B
6B6B6A6A69696968686969676767
>
1
<
1D1C1B1A1A191817171615141413121110100F0E0E0D0D0C0B0B0A0A090808070707060605050504
04040403030302020202020202020101010101010000000000000000000000000000000000000000
0000000000000000000000000000
>
<
ACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFBFC0C1C2C3C4C5C6C7C8C9CACACBCCCDCECFD0D1
D1D2D3D4D5D6D7D7D8D9DADBDBDCDDDEDFDFE0E1E2E2E3E4E5E5E6E7E7E8E9E9EAEBEBECEDEDEEEF
EFF0F0F1F1F2F2F3F3F4F4F4F5F5
>
<
7273737475757677777879797A7B7B7C7D7D7E7E7F80808182828383848585868687888889898A8B
8B8C8C8D8D8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9D9D9D9E9E9F
9F9FA0A0A1A1A1A2A2A2A2A3A3A3
>
<
06060606060606060606060606070707070707070707070707070707070707070707070707070708
08080808080808080808080808080808080808080808080808080808080808090909090909090909
0909090909090909090909090909
>
4 %_Br
[
0.019608 0.403922 1 0 0.960784 0.639216 0.035294 2 52.5714 87.2807 %_BS
%_0.019608 0.403922 1 0 0.960784 0.639216 0.035294 2 52.5714 87.2807 Bs
0.282353 0.54902 1 0.113725 0.67451 0.447059 0.023529 2 41.8301 11.4035 %_BS
%_0.282353 0.54902 1 0.113725 0.67451 0.447059 0.023529 2 41.8301 11.4035 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3506)
(Unnamed gradient 3506) 0 2 Bd
[
<
18191A1B1C1C1D1E1F202122232425262728292A2A2B2C2D2D2E2F3031323333343536373838393A
3B3C3C3D3E3E3F40414243434445464646474849494A4B4B4B4C4C
>
<
070707070807070807080809090809090A090909090A09090A0A0B0A0A0B0A0A0B0A0C0B0B0C0C0B
0C0C0C0D0C0E0D0D0E0D0D0E0E0D0E0E0E0F0E0E0E0F0F0F101010
>
0
0
<
E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBD
BCBBBAB9B8B8B7B6B5B4B3B3B2B1B0AFAFAEADACACABAAAAA9A8A8
>
<
EEEEEDEDECECECEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E2E1E1E0E0E0DFDFDF
DEDEDEDDDDDCDCDCDBDBDBDADADAD9D9D9D8D8D8D8D7D7D7D6D6D6
>
1
4 %_Br
[
0.298039 0.062745 0 0 0.658824 0.839216 1 2 50 100 %_BS
%_0.298039 0.062745 0 0 0.658824 0.839216 1 2 50 100 Bs
0.094118 0.027451 0 0 0.886275 0.933333 1 2 45.2941 17.5439 %_BS
%_0.094118 0.027451 0 0 0.886275 0.933333 1 2 45.2941 17.5439 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\321\353\356\351 1) Ln
0 A
u
0 O
0 J 0 j 1 w 4 M []0 d1 XR
901.5508 806.999 m
901.5508 -15.0469 L
-289 -15.0469 L
-289 806.9976 L
901.5508 806.999 L
Bb
1 (Unnamed gradient 3506) 306.2759 295 90 335 1 0 0 1 0 0 Bg
-0.000015 335 1194.5508 0.000052 -291 295 Xm
-0.000372 8504.3232 1194.5508 0.000052 -290.9995 -8150.5527 Bc
-0.000012 276.2281 1194.5508 0.000052 -291 353.7715 Bm
-0.000372 8504.3232 1194.5508 0.000052 -291 629.9995 Bc
f
0 BB
u
854.1475 320.4727 m
714.2803 295.2666 363.4033 291.3057 266.0488 315.2422 C
215.5 290.0879 -164 298.1289 -186.1221 326.6572 C
-228.5801 310.9727 -261.6152 304.542 -289 302.7373 C
-289 267.9893 L
107.8477 290.4648 504.7012 238.8701 901.5508 263.7695 C
901.5508 309.3262 L
885.6953 310.8984 869.8223 314.2773 854.1475 320.4727 C
Bb
1 (Unnamed gradient 3302) 4874.7764 321.3682 -90.7537 48.2722 1 0 0 1 -4568 0 Bg
-0.63498 -48.268 -1194.8571 15.7187 904.2051 313.5088 Xm
-167.9667 -12767.9766 -1194.8571 15.7187 1072.1611 13080.6719 Bc
-0.359122 -27.2986 -1194.8571 15.7187 904.1943 312.6953 Bm
-0.265156 -20.1558 -1194.8571 15.7187 903.835 285.3965 Bm
-167.9667 -12767.9766 -1194.8571 15.7187 903.5703 265.2412 Bc
f
0 BB
854.1475 320.4727 m
712.5908 300.9746 262.3311 286.0723 266.0488 315.2422 C
186.2744 292.0967 -220.5488 294.6328 -186.1221 326.6572 C
-229.3584 316.8223 -262.3135 312.2598 -289 310.4199 C
-289 267.9893 L
107.8477 290.4648 504.7012 238.8701 901.5508 263.7695 C
901.5508 304.4316 L
865.3887 307.9072 839.4521 313.8271 854.1475 320.4727 C
Bb
1 (Unnamed gradient 3312) 4874.7256 321.3701 -90.7537 48.2722 1 0 0 1 -4568 0 Bg
-0.63498 -48.268 -1194.9581 15.72 904.2051 313.5098 Xm
-167.966 -12767.9248 -1194.9581 15.72 1072.1709 13081.4346 Bc
-0.63498 -48.268 -1194.9581 15.72 904.2051 313.5098 Bm
-167.966 -12767.9248 -1194.9581 15.72 903.5703 265.2422 Bc
f
0 BB
770.7324 307.3154 m
626.2354 296.4492 399.5 283.9385 342.1064 309.8525 C
247.3926 282.3164 -68.5 279.208 -93.9561 316.1934 C
-150.8184 310.6357 -234.916 306.7871 -289 292.3398 C
-289 217.0713 L
107.8467 287.3975 504.7012 169.1309 901.5508 238.7695 C
901.5508 300.5049 L
861.1777 293.5781 801.25 282.5195 770.7324 307.3154 C
Bb
1 (Unnamed gradient 3301) 4874.7969 305.1748 -90.7537 63.1238 1 0 0 1 -4568 0 Bg
-0.830341 -63.1183 -1195.0491 15.7212 904.3203 297.3145 Xm
-167.9925 -12769.9346 -1195.0491 15.7212 1072.2988 13066.1855 Bc
-0.54717 -41.5931 -1195.0491 15.7212 904.3066 296.251 Bm
-0.269177 -20.4615 -1195.0491 15.7212 903.7588 254.6572 Bm
-167.9925 -12769.9346 -1195.0491 15.7212 903.4902 234.1963 Bc
f
0 BB
770.7324 307.3154 m
626.2354 296.4492 268.0781 275.9258 342.1064 309.8525 C
247.3926 282.3164 -149.0547 259.4404 -93.9561 316.1934 C
-150.8184 310.6357 -234.916 306.7871 -289 292.3398 C
-289 217.0713 L
107.8467 287.3975 504.7012 169.1309 901.5508 238.7695 C
901.5508 296.9463 L
862.3076 285.2695 749.25 278.499 770.7324 307.3154 C
Bb
1 (Unnamed gradient 3310) 4874.7969 305.1748 -90.7537 63.1238 1 0 0 1 -4568 0 Bg
-0.830341 -63.1183 -1195.0491 15.7212 904.3203 297.3145 Xm
-167.9924 -12769.9346 -1195.0491 15.7212 1072.3125 13067.249 Bc
-0.741709 -56.381 -1195.0491 15.7212 904.3203 297.3145 Bm
-167.9924 -12769.9346 -1195.0491 15.7212 903.5781 240.9336 Bc
f
0 BB
592 303.6465 m
229 237.8975 -159.5 230.0156 -223.2598 279.752 C
-246.1895 280.6348 -265.6328 273.2607 -289 268.7139 C
-289 192.374 L
107.8467 96.1299 504.7041 258.8818 901.5508 162.5137 C
901.5508 263.542 L
797.0283 287.9893 652 244.8359 592 303.6465 C
Bb
1 (Unnamed gradient 3300) 349.4258 4970.6641 -2.31374 227.1687 0 -1 -1 0 11813.9404 16750.1133 Bg
-9.17112 226.9835 -1195.4779 -48.3025 910.3438 95.4639 Xm
-331.2216 8197.6729 -1195.4779 -48.3025 1241.5654 -8102.209 Bc
-9.17112 226.9835 -1195.4779 -48.3025 910.3438 95.4639 Bm
-331.2216 8197.6729 -1195.4779 -48.3025 901.1729 322.4473 Bc
f
0 BB
592.25 304.041 m
298 251.7744 -318.5 189.3369 -223.2598 279.752 C
-246.1895 280.6348 -265.6328 273.2607 -289 268.7139 C
-289 192.374 L
134 83.3828 504.7041 258.8818 901.5508 162.5137 C
901.5508 263.5352 L
794.2588 287.1484 489.2148 210.5137 592.25 304.041 C
Bb
1 (Unnamed gradient 3308) 349.4258 4970.6641 -2.31374 227.1687 0 -1 -1 0 11813.9404 16750.1133 Bg
-9.17112 226.9835 -1225.052 -49.4974 910.3438 95.4639 Xm
-331.7785 8211.4551 -1225.052 -49.4974 1237.2344 -7995.0156 Bc
-4.28322 106.0088 -1225.052 -49.4974 905.4561 216.4385 Bm
-331.7785 8211.4551 -1225.052 -49.4974 901.1729 322.4473 Bc
f
0 BB
-13.1611 247.8418 m
-147.5469 205.7998 -197.3955 198.9844 -289 207.9189 C
-289 74.749 L
73.6406 71.9814 464.5088 74.5967 901.5508 74.2061 C
901.5508 245.5938 L
599.667 160.3252 0.333984 146.4512 -13.1611 247.8418 C
Bb
1 (Unnamed gradient 3489) 4874.0518 106.0078 89.6349 138.1246 1 0 0 1 -4568 0 Bg
0.880164 138.1218 1195.3544 -7.61725 -291.625 109.8164 Xm
81.5492 12797.2979 1195.3544 -7.61725 -373.1396 -12682.0293 Bc
0.845421 132.6697 1195.3544 -7.61725 -291.5903 115.2686 Bm
81.5492 12797.2979 1195.3544 -7.61725 -290.7451 247.9385 Bc
f
0 BB
-13.1611 247.8418 m
-168.8721 215.4609 -232.6777 205.4268 -289 208.0967 C
-289 74.749 L
73.6406 71.9814 464.5088 74.5967 901.5508 74.2061 C
901.5508 245.5898 L
594.335 155.46 -371 133.9951 -13.1611 247.8418 C
Bb
1 (Unnamed gradient 3306) 4874.0518 106.0078 89.6349 138.1245 1 0 0 1 -4568 0 Bg
0.880163 138.1217 1276.88 -8.13676 -373.1509 110.3359 Xm
81.5492 12797.2988 1276.88 -8.13676 -454.4775 -12652.0527 Bc
0.657705 103.2118 1276.88 -8.13676 -372.9282 145.2461 Bm
81.5492 12797.2988 1276.88 -8.13676 -372.2705 248.458 Bc
f
0 BB
515.1797 254.6846 m
339.5557 184.6709 43 54.0566 -181.9668 161.6357 C
-216.2568 138.0693 -254.1855 115.4648 -289 125.9541 C
-289 61.4893 L
107.8467 -84.5479 504.7041 162.4121 901.5508 16.1807 C
901.5508 168.2197 L
793.667 141.4053 575.667 211.4102 515.1797 254.6846 C
Bb
1 (Unnamed gradient 3490) 165.5161 4973.5254 -2.31374 354.2578 0 -1 -1 0 11813.9404 16750.1133 Bg
-14.3019 353.969 -1196.9125 -48.3605 913.9219 -88.417 Xm
-323.6619 8010.5708 -1196.9125 -48.3605 1233.1836 -7990.0742 Bc
-9.90131 245.0555 -1196.9125 -48.3605 909.5215 20.4961 Bm
-323.6619 8010.5708 -1196.9125 -48.3605 899.6201 265.5518 Bc
f
0 BB
587 172.9404 m
662.123 194.8633 479 221.502 515.1797 254.6846 C
319.667 171.6777 -330 -9.32715 -181.9668 161.6357 C
-211.54 166.0488 -259.5127 135.4658 -289 141.4619 C
-289 61.4824 L
107.8574 -85.2734 507.1543 48.4893 901.5508 15.4063 C
901.5508 149.0479 L
739 104.1953 332 98.5195 587 172.9404 c
Bb
1 (Unnamed gradient 3305) 165.5029 4973.1387 -2.31374 354.2545 0 -1 -1 0 11813.9404 16750.1133 Bg
-14.3018 353.9657 -1239.9288 -50.0985 913.1484 -88.4453 Xm
-323.6908 8011.2861 -1239.9288 -50.0985 1230.2383 -7936.3633 Bc
-7.70095 190.5971 -1239.9288 -50.0985 906.5479 74.9229 Bm
-323.6908 8011.2861 -1239.9288 -50.0985 898.8467 265.5195 Bc
f
0 BB
92.3057 117.292 m
-63.7979 84.1035 -106.9082 69.0674 -289 65.5117 C
-289 -15.0469 L
901.5508 -15.0469 L
901.5508 88.4805 L
660 18.1084 165 35.1367 92.3057 117.292 C
Bb
1 (Unnamed gradient 3493) 4875.54 -28.1279 91.116 144.9611 1 0 0 1 -4568 0 Bg
-2.82337 144.9336 1196.1144 23.3009 -290.5186 -39.7783 Xm
-248.5632 12759.6094 1196.1144 23.3009 -42.2773 -12782.8594 Bc
-2.1423 109.9715 1196.1144 23.3009 -290.8403 -23.251 Bm
-248.5632 12759.6094 1196.1144 23.3009 -292.9824 86.7207 Bc
f
0 BB
140 38.9199 m
175.791 51.1484 23.5 74.3955 92.3057 117.292 C
-63.7979 84.1035 -106.9082 69.0674 -289 65.5117 C
-289 -15.0469 L
901.5508 -15.0469 L
901.5508 88.2432 L
711 15.2705 -51.5 -37.707 140 38.9199 C
Bb
1 (Unnamed gradient 3303) 4875.5371 -28.1279 91.116 144.9611 1 0 0 1 -4568 0 Bg
-2.82337 144.9336 1196.1099 23.3008 -290.5186 -39.7783 Xm
-248.6429 12763.6992 1196.1099 23.3008 -41.8755 -12803.4785 Bc
-2.82337 144.9336 1196.1099 23.3008 -290.5186 -39.7783 Bm
-248.6429 12763.6992 1196.1099 23.3008 -293.3418 105.1553 Bc
f
0 BB
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
